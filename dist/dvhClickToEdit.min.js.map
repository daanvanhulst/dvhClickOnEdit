{"version":3,"sources":["dvhClickToEdit.ts","dvhClickToEdit.js","dvhTextEdit/dvhTextEdit.ts","editableDirectiveFactory/editableDirectiveFactory.ts"],"names":["ClickToEdit","ClickToEdit.Element","ClickToEdit.Element.constructor","ClickToEdit.Element.Factory","ClickToEdit.Element.destruct","ClickToEdit.TextEdit","ClickToEdit.TextEdit.constructor","ClickToEdit.TextEdit.Factory","ClickToEdit.TextEdit.destruct","ClickToEditFactories","ClickToEditFactories.EditableDirectiveFactory","ClickToEditFactories.EditableDirectiveFactory.createEditableDirective"],"mappings":"AAMA,GAAOA,cAAP,SAAOA,GAOHA,GAAaA,GAAOA,WAUhBC,QAVSA,GAUGA,EAA0BA,GAV1CC,GAAAA,GAAAA,IAGWA,MAAAA,OACHA,UAAWA,IACXA,MAAOA,KAMPA,EAAQA,UAAUA,KAAOA,SAACA,EAA0BA,EAA8BA,GCN9E,GDSIA,GAAkBA,EAAyBA,wBAAwBA,EAAMA,WAGzEA,EAAIA,EAASA,GAAiBA,EAGlCA,GAAQA,YAAYA,GAEpBA,EAAMA,IAAIA,WAAYA,EAAKA,WAkBvCD,MAdkBA,GAAAA,QAAdA,WACIE,GAAIA,GAAYA,SAACA,EAA0BA,GACvCA,MAAOA,IAAIA,GAAQA,EAA0BA,GAKjDA,OAFAA,GAAUA,SAAcA,2BAA4BA,YAE7CA,GAGHF,EAAAA,UAAAA,SAARA,WACIG,QAAQA,IAAIA,eAGpBH,IAxCaD,GAAAA,QAAAA,EA0CbA,QAAQA,OAAOA,kBAAmBA,0CAA2CA,+BACxEA,UAAUA,iBAAkBA,EAAQA,YAlDtCA,cAAAA,gBECP,IAAOA,cAAP,SAAOA,GAEHA,GAAaA,GAAQA,WAQjBK,QARSA,KAAbC,GAAAA,GAAAA,IAGWA,MAAAA,OAAQA,EACRA,KAAAA,YAAcA,8CAKjBA,EAASA,UAAUA,KAAOA,SAACA,EAA0BA,EAA8BA,GAC/EA,QAAQA,IAAIA,GACZA,EAAMA,IAAIA,WAAYA,EAAKA,WAkBvCD,MAdkBA,GAAAA,QAAdA,WACIE,GAAIA,GAAYA,WACZA,MAAOA,IAAIA,GAKfA,OAFAA,GAAUA,WAEHA,GAGHF,EAAAA,UAAAA,SAARA,WACIG,QAAQA,IAAIA,eAGpBH,IA7BaL,GAAAA,SAAAA,EA+BbA,QAAQA,OAAOA,iCACVA,UAAUA,cAAeA,EAASA,YAlCpCA,cAAAA,gBCLP,IAAOS,uBAAP,SAAOA,GACHA,GAAMA,GAAwBA,WAA9BC,QAAMA,MAgBNA,MAdWA,GAAAA,UAAAA,wBAAPA,SAA+BA,GAC3BC,GAAIA,GAAUA,EACdA,QAAQA,GACJA,IAAKA,WACDA,EAAUA,yCACVA,MACJA,KAAKA,OACLA,QACIA,EAAUA,kCAIlBA,MAAOA,IAEfD,IAEAD,SAAQA,OAAOA,8CAA+CA,QAAQA,2BAA4BA,WAC9FA,MAAOA,IAAIA,MApBZA,uBAAAA","file":"dvhClickToEdit.min.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\n/**\n * @ngdoc overview\n * @name ClickToEdit\n */\nmodule ClickToEdit {\n\n    export interface IClickToEditScope extends ng.IScope {\n        fieldType: string;\n        value: string;\n    }\n\n    export class Element {\n        // #region Angular directive properties, fields, and methods\n        public link: (scope: IClickToEditScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => void;\n        public scope = {\n            fieldType: \"@\",\n            value: \"@\"\n        };\n        // #endregion\n\n        // #region Initialization and destruction\n        constructor(editableDirectiveFactory, $compile) {\n            Element.prototype.link = (scope: IClickToEditScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => {\n\n                // Create the editable element\n                var editableElement = editableDirectiveFactory.createEditableDirective(scope.fieldType);\n\n                //Compile the editable element\n                var e = $compile(editableElement)(scope);\n\n                //Replace the current element with the editable element\n                element.replaceWith(e);\n\n                scope.$on(\"$destroy\", this.destruct);\n            };\n        }\n\n        public static Factory() {\n            var directive = (editableDirectiveFactory, $compile) => {\n                return new Element(editableDirectiveFactory, $compile);\n            };\n\n            directive[\"$inject\"] = [\"editableDirectiveFactory\", \"$compile\"];\n\n            return directive;\n        }\n\n        private destruct() {\n            console.log(\"destroying\");\n        }\n        // #endregion\n    }\n\n    angular.module(\"dvhClickToEdit\", [\"dvhClickToEdit.editableDirectiveFactory\", \"dvhClickToEdit.dvhTextEdit\"])\n        .directive(\"dvhClickToEdit\", Element.Factory());\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n/**\n * @ngdoc overview\n * @name ClickToEdit\n */\nvar ClickToEdit;\n(function (ClickToEdit) {\n    var Element = (function () {\n        // #endregion\n        // #region Initialization and destruction\n        function Element(editableDirectiveFactory, $compile) {\n            var _this = this;\n            this.scope = {\n                fieldType: \"@\",\n                value: \"@\"\n            };\n            Element.prototype.link = function (scope, element, attrs) {\n                // Create the editable element\n                var editableElement = editableDirectiveFactory.createEditableDirective(scope.fieldType);\n                //Compile the editable element\n                var e = $compile(editableElement)(scope);\n                //Replace the current element with the editable element\n                element.replaceWith(e);\n                scope.$on(\"$destroy\", _this.destruct);\n            };\n        }\n        Element.Factory = function () {\n            var directive = function (editableDirectiveFactory, $compile) {\n                return new Element(editableDirectiveFactory, $compile);\n            };\n            directive[\"$inject\"] = [\"editableDirectiveFactory\", \"$compile\"];\n            return directive;\n        };\n        Element.prototype.destruct = function () {\n            console.log(\"destroying\");\n        };\n        return Element;\n    })();\n    ClickToEdit.Element = Element;\n    angular.module(\"dvhClickToEdit\", [\"dvhClickToEdit.editableDirectiveFactory\", \"dvhClickToEdit.dvhTextEdit\"]).directive(\"dvhClickToEdit\", Element.Factory());\n})(ClickToEdit || (ClickToEdit = {}));\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n/// <reference path=\"../dvhClickToEdit.ts\" />\n\n/**\n * @ngdoc overview\n * @name ClickToEdit\n */\nmodule ClickToEdit {\n\n    export class TextEdit {\n        // #region Angular directive properties, fields, and methods\n        public link: (scope: IClickToEditScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => void;\n        public scope = false;\n        public templateUrl = \"dvhClickToEdit/dvhTextEdit/dvhTextEdit.html\";\n        // #endregion\n\n        // #region Initialization and destruction\n        constructor() {\n            TextEdit.prototype.link = (scope: IClickToEditScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) => {\n                console.log(scope);\n                scope.$on(\"$destroy\", this.destruct);\n            };\n        }\n\n        public static Factory() {\n            var directive = () => {\n                return new TextEdit();\n            };\n\n            directive[\"$inject\"] = [];\n\n            return directive;\n        }\n\n        private destruct() {\n            console.log(\"destroying\");\n        }\n        // #endregion\n    }\n\n    angular.module(\"dvhClickToEdit.dvhTextEdit\", [])\n        .directive(\"dvhTextEdit\", TextEdit.Factory());\n}\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nmodule ClickToEditFactories {\r\n    class EditableDirectiveFactory {\r\n\r\n        public createEditableDirective(type): String {\r\n            var element = \"\";\r\n            switch (type) {\r\n                case \"textArea\":\r\n                    element = \"<dvh-textarea-edit><dvh-textarea-edit/>\";\r\n                    break;\r\n                case \"text\":\r\n                default:\r\n                    element = \"<dvh-text-edit><dvh-text-edit/>\";\r\n                    break;\r\n\r\n            }\r\n            return element;\r\n        }\r\n    }\r\n\r\n    angular.module(\"dvhClickToEdit.editableDirectiveFactory\", []).factory(\"editableDirectiveFactory\", () => {\r\n        return new EditableDirectiveFactory();\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}